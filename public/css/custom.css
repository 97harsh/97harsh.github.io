/* 
Dynamic Width Image
Use this class for images that you want to dynamically resize based on data attributes.
This class centers the image by default. To align the image to the left or right, use the `data-align` attribute.

Markup:
<img src="/path/to/image.jpg" class="dynamic-width" alt="Description">
<img src="/path/to/image.jpg" class="dynamic-width" data-width="300" alt="Description">
<img src="/path/to/image.jpg" class="dynamic-width" data-height="200" alt="Description">
<img src="/path/to/image.jpg" class="dynamic-width" data-width="300" data-height="200" alt="Description">
<img src="/path/to/image.jpg" class="dynamic-width" data-align="left" alt="Description">
<img src="/path/to/image.jpg" class="dynamic-width" data-align="right" alt="Description">

Styleguide Components.Images.DynamicWidth
*/
.dynamic-width {
    width: auto;
    height: auto;
    display: block;
    margin: auto;
    max-width: 100%;
}

/* 
Left Alignment for Dynamic Width Image
Use this class in conjunction with `.dynamic-width` to align the image to the left.

Styleguide Components.Images.AlignLeft
*/
.align-left {
    margin-right: auto;
    margin-left: 0;
}

/* 
Right Alignment for Dynamic Width Image
Use this class in conjunction with `.dynamic-width` to align the image to the right.

Styleguide Components.Images.AlignRight
*/
.align-right {
    margin-left: auto;
    margin-right: 0;
}


.projects-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
}

.project {
    border: 1px solid #ccc;
    padding: 20px;
    text-align: center;
    position: relative; /* To create a relative context for the image and black background */
    overflow: hidden; /* Hide any overflowing content */
}

.project img {
    width: 100%; /* Ensure the image fills the container width */
    height: 100%; /* Let the height adjust proportionally based on width */
    object-fit: contain; /* Maintain aspect ratio and fit entire image */
    position: absolute; /* Position the image */
    top: 0;
    left: 0;
}

/* Black background */
.project::before {
    content: ''; /* Create a pseudo-element for the black background */
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: black; /* Set black background color */
    z-index: -1; /* Place it behind the image */
}

/* For smaller screens, change the layout to a single column */
@media screen and (max-width: 600px) {
    .projects-container {
        grid-template-columns: 1fr;
    }
}